from typing import Dict, List, Optional

from typing_extensions import TypedDict

from philoagents.domain import Action, Character
from philoagents.domain.resources import PrivateIntel


class ActionState(TypedDict):
    """
    The state for the Delegate Action Agent's workflow.

    This state provides all the necessary information for a single character agent
    to make one strategic decision for the current round.

    Attributes:
        character: The full Character object for the agent making the decision.
                   This includes their personality, goals, and current resources.
        crisis_update: The public narrative text describing the current world situation.
        action: The final output of the graph will be stored here. This will be
                a single, structured Action object.
    """

    character: Character
    crisis_update: str
    other_players_dossier: str
    action: Optional[Action]


class ResolutionState(TypedDict):
    """
    The state for the AI Judge Agent's workflow.

    This state provides the Judge with all submitted actions for the round
    and the secret plot it needs to advance.

    Attributes:
        actions: A list of all `Action` objects submitted by every character
                 (AI and human) for the current round.
        characters: A dictionary mapping character IDs to their full Character objects
                    *before* this round's resolution. This is needed to apply the
                    resource updates correctly.
        undergame_plot: The secret narrative goal that only the Judge knows and
                        is trying to orchestrate.
        crisis_update: The narrative text for the *next* round, generated by the Judge.
                       This is a primary output of the graph.
        updated_characters: A dictionary mapping character IDs to their Character objects
                            *after* the Judge has updated their resources. This is a
                            primary output of the graph.
    """

    actions: List[Action]
    characters: Dict[str, Character]
    undergame_plot: str
    current_game_state_json: Optional[str]
    crisis_update: Optional[str]
    updated_characters: Optional[Dict[str, Character]]
    private_intel_reports: Optional[List[PrivateIntel]]
